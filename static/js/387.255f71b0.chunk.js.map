{"version":3,"file":"static/js/387.255f71b0.chunk.js","mappings":"oSAEAA,IAAAA,SAAAA,QAAyB,gCAClB,IACDC,EAAU,mCASHC,EAAkB,mCAAG,oGACTF,IAAAA,IAAA,oCAAuCC,IAD9B,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,qDAKlBC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,IAAAA,IAAA,gCACIC,EADJ,iCACoCK,EADpC,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAY,mCAAG,WAAMC,GAAN,uFACHR,IAAAA,IAAA,iBACXQ,EADW,oBACQP,EADR,oBADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAS,mCAAG,WAAMD,GAAN,uFACAR,IAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,uD,6JC3BP,SAASM,IACtB,OAAyBC,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BP,EAAAA,EAAAA,IAAUK,GAFrC,OAEUG,EAFV,OAGIJ,EAAQI,GAHZ,wGADc,uBAAC,WAAD,wBAOdC,KACC,CAACJ,IAIJ,OACE,8BACGF,IACC,wBACGA,EAAMO,KAAI,SAAAC,GAAI,OACb,0BACGA,EAAKC,aADR,QAEE,gBAAKC,IAAG,UATL,mCASK,OAAcF,EAAKC,cAAgBE,IAAKH,EAAKI,OAFvD,MAGGC,GACD,uBAAIL,EAAKI,QACT,uCAAeJ,EAAKM,WAAa,eAL1BN,EAAKO,kB","sources":["components/services/api.js","components/views/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nconst API_KEY = 'a2d752373b5fc20ba7d7c26c66d25d31';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('Not found'));\n// }\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieReview = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { movieCast } from '../services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport imgErr from '../image/error.jpg';\n\nexport default function Cast() {\n  const [casts, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function FetchCastInfo() {\n      try {\n        const castItem = await movieCast(id);\n        setCast(castItem);\n      } catch (error) {}\n    }\n    FetchCastInfo();\n  }, [id]);\n\n  const urlImg = 'https://image.tmdb.org/t/p/w200';\n\n  return (\n    <>\n      {casts && (\n        <ul>\n          {casts.map(cast => (\n            <li key={cast.cast_id}>\n              {cast.profile_path} ? (\n              <img src={`${urlImg}${cast.profile_path}`} alt={cast.name} />) :\n              {imgErr}\n              <p>{cast.name}</p>\n              <p>Character: {cast.character || 'Unknown'}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrendingFilms","response","data","searchMovies","query","movieDetails","movieId","movieCast","Cast","useState","casts","setCast","id","useParams","useEffect","castItem","FetchCastInfo","map","cast","profile_path","src","alt","name","imgErr","character","cast_id"],"sourceRoot":""}