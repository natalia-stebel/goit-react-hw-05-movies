{"version":3,"file":"static/js/Movies.3571fb9f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Gallery/MovieGallery.module.css?0b80","components/Gallery/MovieGallery.js","components/services/api.js","components/views/ButtonGoBack.js","components/SearchBar/SearchBar.js","components/views/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"galleryList\":\"MovieGallery_galleryList__M2SqI\",\"galleryItem\":\"MovieGallery_galleryItem__1rxQO\"};","import React from 'react';\nimport { Link, useLocation, Outlet } from 'react-router-dom';\nimport css from './MovieGallery.module.css';\n\nexport default function MovieGallery({ movies }) {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className={css.galleryList}>\n        {movies &&\n          movies.map(({ title, id, poster_path }) => (\n            <li className={css.galleryItem} key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                  alt={title}\n                />\n                <p>{title}</p>\n              </Link>\n            </li>\n          ))}\n        <Outlet />\n      </ul>\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nconst API_KEY = 'a2d752373b5fc20ba7d7c26c66d25d31';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('Not found'));\n// }\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieReview = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { Link, useLocation } from 'react-router-dom';\n\nexport default function ButtonGoBack() {\n  const location = useLocation();\n  return (\n    <Link to={location?.state?.from ?? '/'}>\n      <button type=\"button\">Go back</button>\n    </Link>\n  );\n}\n","import { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function SearchBar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const searchValue = searchQuery.get('query') ?? '';\n\n  const handleInputChange = e => {\n    if (e.currentTarget.value.toLowerCase() !== searchQuery)\n      setSearchQuery({ query: e.currentTarget.value.toLowerCase() });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(searchValue);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        value={searchQuery}\n        name=\"query\"\n        onChange={handleInputChange}\n        type=\"text\"\n      />\n      <button type=\"button\" onClick={handleSubmit}>\n        Search\n      </button>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { searchMovies } from '../services/api';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MovieGallery from '../Gallery/MovieGallery';\nimport ButtonGoBack from './ButtonGoBack';\n// import { Spinner } from '../Loader/Loader';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searQuery, setSearQuery] = useState([]);\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    async function searchMovie() {\n      if (query === '') {\n        return;\n      }\n\n      try {\n        const searchRequest = await searchMovies(query);\n\n        if (searchRequest.length === 0) {\n          return alert(':(  . Please try another name of movie.');\n        }\n        setSearQuery();\n      } catch (error) {}\n    }\n    searchMovie();\n  }, [query]);\n\n  const formData = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.currentTarget.elements.query.value });\n    if (e.currentTarget.elements.query.value.trim() === '') {\n      alert(':( Search is empty');\n      return;\n    }\n  };\n\n  return (\n    <>\n      {/* <Spinner /> */}\n      <div>\n        <ButtonGoBack />\n        <SearchBar onSubmit={formData} />\n        {searQuery && <MovieGallery movies={query} />}\n      </div>\n    </>\n  );\n}\n"],"names":["MovieGallery","movies","location","useLocation","className","css","map","title","id","poster_path","to","state","from","src","alt","axios","API_KEY","fetchTrendingFilms","response","data","searchMovies","query","movieDetails","movieId","movieCast","ButtonGoBack","type","SearchBar","onSubmit","useSearchParams","searchQuery","setSearchQuery","searchValue","get","handleSubmit","e","preventDefault","value","name","onChange","currentTarget","toLowerCase","onClick","Movies","searchParams","setSearchParams","useState","searQuery","setSearQuery","useEffect","length","alert","searchMovie","elements","trim"],"sourceRoot":""}