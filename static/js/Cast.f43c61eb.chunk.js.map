{"version":3,"file":"static/js/Cast.f43c61eb.chunk.js","mappings":"oSAEAA,IAAAA,SAAAA,QAAyB,gCAClB,IACDC,EAAU,mCASHC,EAAkB,mCAAG,oGACTF,IAAAA,IAAA,oCAAuCC,IAD9B,cAC1BE,EAD0B,yBAEzBA,EAASC,MAFgB,2CAAH,qDAKlBC,EAAY,mCAAG,WAAMC,GAAN,uFACHN,IAAAA,IAAA,gCACIC,EADJ,iCACoCK,EADpC,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAY,mCAAG,WAAMC,GAAN,uFACHR,IAAAA,IAAA,iBACXQ,EADW,oBACQP,EADR,oBADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAS,mCAAG,WAAMD,GAAN,uFACAR,IAAAA,IAAA,iBACXQ,EADW,4BACgBP,EADhB,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,uD,mJC5BP,SAASM,IACtB,OAAyBC,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KACQL,GAAYM,EAAAA,EAAAA,MAAZN,QAYR,OAVAO,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BN,EAAAA,EAAAA,IAAUD,GAFrC,OAEUQ,EAFV,OAGIH,EAAQG,GAHZ,wGADc,uBAAC,WAAD,wBAOdC,KACC,CAACT,KAGF,wBACGI,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACT,2BACE,gBAAKC,IAAG,yCAAoCH,GAAgBI,IAAI,MAChE,4BACE,kCAAUH,MACV,uCAAeC,UAJVH","sources":["components/services/api.js","components/views/Cast.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const POSTER_URL = 'https://image.tmdb.org/t/p/w500';\nconst API_KEY = 'a2d752373b5fc20ba7d7c26c66d25d31';\n\n// async function fetchWithErrorHandling(url = '', config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error('Not found'));\n// }\n\nexport const fetchTrendingFilms = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const movieReview = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { movieCast } from '../services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\n\nexport default function Cast() {\n  const [casts, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function FetchCastInfo() {\n      try {\n        const castItem = await movieCast(movieId);\n        setCast(castItem);\n      } catch (error) {}\n    }\n    FetchCastInfo();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {casts.map(({ id, profile_path, original_name, character }) => (\n        <li key={id}>\n          <img src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt=\"\" />\n          <div>\n            <p>name: {original_name}</p>\n            <p>character: {character}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n"],"names":["axios","API_KEY","fetchTrendingFilms","response","data","searchMovies","query","movieDetails","movieId","movieCast","Cast","useState","casts","setCast","useParams","useEffect","castItem","FetchCastInfo","map","id","profile_path","original_name","character","src","alt"],"sourceRoot":""}